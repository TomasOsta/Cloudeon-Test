#Ansible_Playbook_Cloudeon.yml

#1. In this use case I will be selecting a virtual machine template and cloning it into a specific folder in Datacenter / Cluster.
#The following Ansible playbook showcases the basic parameters that are needed for this.

---
- name: Create a VM from a template
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - name: Clone the template
    vmware_guest:
      hostname: 192.0.2.44
      username: administrator@vsphere.local
      password: vmware
      validate_certs: False
      name: testvm_2
      template: template_el7
      datacenter: DC1
      folder: /DC1/vm
      state: poweredon
      wait_for_ip_address: yes

#2nd role. Setting up prometheus, grafana, alertmanager and node exporter.
---
- name: Set up prometheus
  hosts: prom-01
  gather_facts: true
  user: centos
  become: true
  vars_files:
  - ../group_vars/jhb.yml
  - ../group_vars/prometheus.yml

  roles:
    - prometheus
    - firewalld
---
- name: Set up grafana
  hosts: prom-01
  gather_facts: true
  user: centos
  become: true
  vars_files:
  - ../group_vars/jhb.yml

  roles:
    - grafana
---
- name: setting up alertmanager
  hosts: alertmanager
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - alertmanager
---  
- name setting up node exporter
  hosts: node_exporter
  become: yes
  become_user: root
  become_method: sudo
  roles:
    - prometheus_node_exporter
    
    
#3. Configuring prometheus as datasource for grafana:

# config file version
apiVersion: 1

# list of datasources that should be deleted from the database
deleteDatasources:
  - name: Prometheus
    orgId: 1

# list of datasources to insert/update depending
# whats available in the database
datasources:
  # <string, required> name of the datasource. Required
- name: Prometheus
  # <string, required> datasource type. Required
  type: prometheus
  # <string, required> access mode. direct or proxy. Required
  access: proxy
  # <int> org id. will default to orgId 1 if not specified
  orgId: 1
  # <string> url
  url: http://prometheus:9090
  # <string> database password, if used
  password:
  # <string> database user, if used
  user:
  # <string> database name, if used
  database:
  # <bool> enable/disable basic auth
  basicAuth: true
  # <string> basic auth username
  basicAuthUser: admin
  # <string> basic auth password
  basicAuthPassword: foobar
  # <bool> enable/disable with credentials headers
  withCredentials:
  # <bool> mark as default datasource. Max one per org
  isDefault:
  # <map> fields that will be converted to json and stored in json_data
  jsonData:
     graphiteVersion: "1.1"
     tlsAuth: false
     tlsAuthWithCACert: false
  # <string> json object of data that will be encrypted.
  secureJsonData:
    tlsCACert: "..."
    tlsClientCert: "..."
    tlsClientKey: "..."
  version: 1
  # <bool> allow users to edit datasources from the UI.
  editable: true


#4. In this role, I am configuring node data exporter as the source of metrics for Prometheus:



